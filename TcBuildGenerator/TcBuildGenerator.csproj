<Project Sdk="Microsoft.NET.Sdk">

  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <LangVersion>latest</LangVersion>
    <Nullable>enable</Nullable>
  </PropertyGroup>

  <ItemGroup>
    <EmbeddedResource Include="..\WfxWrapper\FsWrapper.cs" Link="Wrapper\FsWrapper.cs" />
  </ItemGroup>

  <ItemGroup>
    <PackageReference Include="Microsoft.CodeAnalysis.CSharp" Version="3.8.0" PrivateAssets="all" />
    <PackageReference Include="Microsoft.CodeAnalysis.Analyzers" Version="3.3.1" PrivateAssets="all" />
  </ItemGroup>

  <ItemGroup>
    <Folder Include="Wrapper\" />
  </ItemGroup>

  <PropertyGroup>
    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <NoPackageAnalysis>true</NoPackageAnalysis>
  </PropertyGroup>
  <ItemGroup>
    <None Include="$(OutputPath)\TcBuildGenerator.*" Pack="true"
          PackagePath="analyzers\dotnet\cs"
          Visible="false" />
  </ItemGroup>

  <!--<PropertyGroup>
    -->
  <!--<BuildOutputTargetFolder>bin</BuildOutputTargetFolder>--><!--

    <GeneratePackageOnBuild>True</GeneratePackageOnBuild>
    <IncludeBuildOutput>false</IncludeBuildOutput>
    <NoPackageAnalysis>true</NoPackageAnalysis>

    <TargetsForTfmSpecificContentInPackage>$(TargetsForTfmSpecificContentInPackage);IncludeFilesInPackage</TargetsForTfmSpecificContentInPackage>
  </PropertyGroup>
  <Target Name="IncludeFilesInPackage">
    <ItemGroup>
      <TfmSpecificPackageFile Include="$(OutputPath)\*.dll" Exclude="$(OutputPath)\System*.dll;$(OutputPath)\Microsoft*.dll" PackagePath="analyzers\dotnet\cs" />
      <TfmSpecificPackageFile Include="$(OutputPath)\*.pdb" Exclude="$(OutputPath)\System*.dll;$(OutputPath)\Microsoft*.dll" PackagePath="analyzers\dotnet\cs" />
    </ItemGroup>
  </Target>-->


  <!-- For every PackageReference with Pack=true, we include the assemblies from it in the package -->
  <!--<Target Name="AddPackDependencies"
          Inputs="@(RuntimeCopyLocalItems)"
          Outputs="%(RuntimeCopyLocalItems.NuGetPackageId)"
          DependsOnTargets="ResolvePackageAssets"
          BeforeTargets="GenerateNuspec"
          AfterTargets="ResolvePackageAssets">
    <ItemGroup>
      <NuGetPackageId Include="@(RuntimeCopyLocalItems -> '%(NuGetPackageId)')" />
    </ItemGroup>
    <PropertyGroup>
      <NuGetPackageId>@(NuGetPackageId -&gt; Distinct())</NuGetPackageId>
    </PropertyGroup>
    <ItemGroup>
      <PackageReferenceDependency Include="@(PackageReference -&gt; WithMetadataValue('Identity', '$(NuGetPackageId)'))" />
    </ItemGroup>
    <PropertyGroup>
      <NuGetPackagePack>@(PackageReferenceDependency -> '%(Pack)')</NuGetPackagePack>
    </PropertyGroup>
    <ItemGroup Condition="'$(NuGetPackagePack)' == 'true'">
      <_PackageFiles Include="@(RuntimeCopyLocalItems)" PackagePath="$(BuildOutputTargetFolder)/$(TargetFramework)/%(Filename)%(Extension)" />
      <RuntimeCopyLocalItems Update="@(RuntimeCopyLocalItems)" CopyLocal="true" Private="true" />
      <ResolvedFileToPublish Include="@(RuntimeCopyLocalItems)" CopyToPublishDirectory="PreserveNewest" RelativePath="%(Filename)%(Extension)" />
    </ItemGroup>
  </Target>-->

</Project>
